using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;
using System;

namespace Vanilla.Content.Projectiles
{
    public class PoisonDnaSeed : ModProjectile
    {
        public override void SetStaticDefaults()
        {
            DisplayName.SetDefault("DNA Seed");
            ProjectileID.Sets.TrailCacheLength[Projectile.type] = 20;
            ProjectileID.Sets.TrailingMode[Projectile.type] = 0;
            Main.projFrames[Projectile.type] = 2;
        }

        public override void SetDefaults()
        {
            Projectile.width = 12;
            Projectile.height = 12;
            Projectile.friendly = false;
            Projectile.hostile = true;
            Projectile.tileCollide = false;
            Projectile.ignoreWater = true;
            Projectile.timeLeft = 300;
            Projectile.penetrate = -1;
        }

        private float speed = 5f;
        private float frequency = 0.25f;
        private float magnitude = 30f;
        private float phase;

        public override void AI()
        {
            phase += 0.1f;

            Vector2 velocity = new Vector2(0f, -1f) * speed;
            float wave = (float)Math.Sin(phase + Projectile.ai[0] * Math.PI) * magnitude;
            Vector2 offset = new Vector2(wave, 0f).RotatedBy(velocity.ToRotation());

            Projectile.Center += velocity + offset * 0.05f;
        }

        public override bool PreDraw(ref Color lightColor)
        {
            Texture2D texture = Terraria.GameContent.TextureAssets.Projectile[Projectile.type].Value;
            Vector2 origin = texture.Size() / 2f;

            // Рисуем трейл
            for (int i = 0; i < Projectile.oldPos.Length; i++)
            {
                float opacity = (Projectile.oldPos.Length - i) / (float)Projectile.oldPos.Length;
                Color color = Color.Lime * opacity;
                Vector2 drawPos = Projectile.oldPos[i] + Projectile.Size / 2f - Main.screenPosition;
                Main.spriteBatch.Draw(texture, drawPos, null, color, Projectile.rotation, origin, Projectile.scale, SpriteEffects.None, 0f);
            }

            // Рисуем текущий кадр
            Vector2 position = Projectile.Center - Main.screenPosition;
            Main.spriteBatch.Draw(texture, position, null, lightColor, Projectile.rotation, origin, Projectile.scale, SpriteEffects.None, 0f);

            return false;
        }
    }
}